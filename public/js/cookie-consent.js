// static/js/cookie-consent.js
console.log('üç™ cookie-consent.js V2 (with Consent Mode) –∑–∞–≥—Ä—É–∂–µ–Ω');

(function() {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ –∫–ª—é—á –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã - –æ–Ω –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å 'granted' –∏–ª–∏ 'denied'
    // –∏–ª–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π –∫–ª—é—á —Ç–∏–ø–∞ 'consent_choice_made'
    const consentPropertyName = 'cookie_consent_status'; // –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–ª–∏ –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏
    const bannerId = 'cookie-consent-banner';
    const acceptBtnId = 'cookie-accept-btn';
    const declineBtnId = 'cookie-decline-btn';

    // --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å localStorage/cookie (–æ—Å—Ç–∞—é—Ç—Å—è –ø–æ—á—Ç–∏ —Ç–∞–∫–∏–º–∏ –∂–µ) ---
    function saveConsentDecision(status) { // status –±—É–¥–µ—Ç 'granted' –∏–ª–∏ 'denied'
      try {
        localStorage.setItem(consentPropertyName, status);
        console.log(`Consent status saved to localStorage: ${status}`);
      } catch (e) {
        console.error('Could not save consent status in localStorage', e);
        const expiryDate = new Date();
        expiryDate.setFullYear(expiryDate.getFullYear() + 1);
        document.cookie = `${consentPropertyName}=${status}; expires=${expiryDate.toUTCString()}; path=/; SameSite=Lax`;
        console.log(`Consent status saved to cookie as fallback: ${status}`);
      }
    }

    function hasMadeDecision() {
      let decision = null;
      try {
        decision = localStorage.getItem(consentPropertyName);
      } catch (e) {
        console.warn('Could not read consent status from localStorage', e);
      }
      if (decision !== null) {
        return true; // –†–µ—à–µ–Ω–∏–µ –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ (granted –∏–ª–∏ denied)
      }
      // fallback: –ø—Ä–æ–≤–µ—Ä—è–µ–º cookie
      const matches = document.cookie.match(
        new RegExp('(?:^|; )' + consentPropertyName.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + '=([^;]*)')
      );
      return matches ? true : false; // –ï—Å—Ç—å cookie - —Ä–µ—à–µ–Ω–∏–µ –±—ã–ª–æ
    }
    // --- –ö–æ–Ω–µ—Ü —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º ---


    // --- –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Google Consent Mode ---
    function updateConsent(granted) {
       // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏ —Ñ—É–Ω–∫—Ü–∏—è gtag (–æ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–∑ Default State –∏–ª–∏ GTM)
       if (typeof gtag !== 'function') {
           console.error('gtag function is not defined. Make sure GTM or Default Consent is loaded before this script.');
           return;
       }

       const consentState = {
           'analytics_storage': granted ? 'granted' : 'denied',
           // –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ad_storage)
           // 'ad_storage': granted ? 'granted' : 'denied',
           // 'ad_user_data': granted ? 'granted' : 'denied',
           // 'ad_personalization': granted ? 'granted' : 'denied'
       };

       gtag('consent', 'update', consentState);
       console.log('Google Consent Mode updated:', consentState);

       // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∞–º —Ñ–∞–∫—Ç –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Å–∫—Ä—ã—Ç–∏—è –±–∞–Ω–Ω–µ—Ä–∞
       saveConsentDecision(granted ? 'granted' : 'denied');
    }
    // --- –ö–æ–Ω–µ—Ü —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ---


    document.addEventListener('DOMContentLoaded', () => {
      const banner = document.getElementById(bannerId);
      if (!banner) {
        console.error('Cookie banner element not found');
        return;
      }

      const acceptBtn = document.getElementById(acceptBtnId);
      const declineBtn = document.getElementById(declineBtnId);

      // –ï—Å–ª–∏ —Ä–µ—à–µ–Ω–∏–µ –µ—â–µ –ù–ï –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–Ω–Ω–µ—Ä
      if (!hasMadeDecision()) {
        console.log('No prior consent decision found. Showing banner.');
        banner.hidden = false;
      } else {
         console.log('Prior consent decision found. Banner remains hidden.');
      }

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ ¬´–ü—Ä–∏–Ω—è—Ç—å¬ª
      if (acceptBtn) {
        acceptBtn.addEventListener('click', () => {
          console.log('Accept button clicked.');
          updateConsent(true); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º 'granted'
          banner.hidden = true;
        });
      } else {
         console.error('Accept button not found');
      }

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ ¬´–û—Ç–∫–ª–æ–Ω–∏—Ç—å¬ª
      if (declineBtn) {
        declineBtn.addEventListener('click', () => {
          console.log('Decline button clicked.');
          updateConsent(false); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º 'denied'
          banner.hidden = true;
        });
      } else {
         console.error('Decline button not found');
      }
    });
  })();