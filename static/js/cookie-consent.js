// static/js/cookie-consent.js
console.log('üç™ cookie-consent.js V2 (with Consent Mode) –∑–∞–≥—Ä—É–∂–µ–Ω');

(function() {
    // –ö–ª—é—á –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–∏—è –≤ localStorage / cookie
    const consentPropertyName = 'cookie_consent_status'; // –ö–ª—é—á –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è 'granted' –∏–ª–∏ 'denied'
    const bannerId = 'cookie-consent-banner';
    const acceptBtnId = 'cookie-accept-btn';
    const declineBtnId = 'cookie-decline-btn';

    /**
     * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–æ–≥–ª–∞—Å–∏—è (granted/denied) –≤ localStorage —Å fallback –Ω–∞ cookie.
     * @param {string} status - 'granted' –∏–ª–∏ 'denied'.
     */
    function saveConsentDecision(status) {
      try {
        localStorage.setItem(consentPropertyName, status);
        console.log(`[Cookie Consent] Consent status saved to localStorage: ${status}`);
      } catch (e) {
        console.error('[Cookie Consent] Could not save consent status in localStorage', e);
        // Fallback –Ω–∞ cookie, –µ—Å–ª–∏ localStorage –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω
        const expiryDate = new Date();
        expiryDate.setFullYear(expiryDate.getFullYear() + 1); // –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è - 1 –≥–æ–¥
        document.cookie = `${consentPropertyName}=${status}; expires=${expiryDate.toUTCString()}; path=/; SameSite=Lax; Secure`; // –î–æ–±–∞–≤–ª–µ–Ω Secure —Ñ–ª–∞–≥
        console.log(`[Cookie Consent] Consent status saved to cookie as fallback: ${status}`);
      }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –±—ã–ª–æ –ª–∏ —Ä–∞–Ω–µ–µ –ø—Ä–∏–Ω—è—Ç–æ –∫–∞–∫–æ–µ-–ª–∏–±–æ —Ä–µ—à–µ–Ω–∏–µ –æ —Å–æ–≥–ª–∞—Å–∏–∏ (granted –∏–ª–∏ denied).
     * @returns {boolean} - true, –µ—Å–ª–∏ —Ä–µ—à–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ, false - –µ—Å–ª–∏ –Ω–µ—Ç.
     */
    function hasMadeDecision() {
      let decision = null;
      let source = 'none';
      try {
        decision = localStorage.getItem(consentPropertyName);
        if (decision !== null) {
          source = 'localStorage';
        }
      } catch (e) {
        console.warn('[Cookie Consent] Could not read consent status from localStorage', e);
      }

      if (decision === null) {
        // Fallback: –ø—Ä–æ–≤–µ—Ä—è–µ–º cookie
        const cookieNameEscaped = consentPropertyName.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1');
        const matches = document.cookie.match(new RegExp('(?:^|; )' + cookieNameEscaped + '=([^;]*)'));
        if (matches) {
          decision = decodeURIComponent(matches[1]);
          source = 'cookie';
        }
      }

      // –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
      if (decision !== null) {
         console.log(`[Cookie Consent] Found prior decision '${decision}' from ${source}.`);
         return true;
      } else {
         console.log('[Cookie Consent] No prior decision found in localStorage or cookie.');
         return false;
      }
    }

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç Google Consent Mode –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –≤ dataLayer –ø—Ä–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ —Å–æ–≥–ª–∞—Å–∏—è.
     * @param {boolean} granted - true, –µ—Å–ª–∏ —Å–æ–≥–ª–∞—Å–∏–µ –¥–∞–Ω–æ, false - –µ—Å–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ.
     */
    function updateConsent(granted) {
       // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ dataLayer —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ gtag - —Ñ—É–Ω–∫—Ü–∏—è
       window.dataLayer = window.dataLayer || [];
       function gtag(){dataLayer.push(arguments);} // –û–±—ä—è–≤–ª—è–µ–º gtag –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏

       if (typeof gtag !== 'function') {
           // –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ Default Consent state –Ω–µ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–µ—Ä–µ–¥ GTM
           console.error('[Cookie Consent] gtag function is not defined. Consent update failed. Check script order in <head>.');
           // –í—Å–µ —Ä–∞–≤–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏–º —Ä–µ—à–µ–Ω–∏–µ, —á—Ç–æ–±—ã —Å–∫—Ä—ã—Ç—å –±–∞–Ω–Ω–µ—Ä
           saveConsentDecision(granted ? 'granted' : 'denied');
           return;
       }

       // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–æ–≥–ª–∞—Å–∏—è
       const consentState = {
           'analytics_storage': granted ? 'granted' : 'denied',
           'ad_storage': granted ? 'granted' : 'denied', // –î–æ–±–∞–≤–ª—è–µ–º –∏ —Ä–µ–∫–ª–∞–º–Ω–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ
           'ad_user_data': granted ? 'granted' : 'denied',
           'ad_personalization': granted ? 'granted' : 'denied'
           // –î–æ–±–∞–≤—å—Ç–µ/—É–¥–∞–ª–∏—Ç–µ –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
       };

       // 1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ Consent Mode
       gtag('consent', 'update', consentState);
       console.log('[Cookie Consent] Google Consent Mode updated:', consentState);

       // 2. –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ—à–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ ('granted' –∏–ª–∏ 'denied')
       saveConsentDecision(granted ? 'granted' : 'denied');

       // 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –≤ dataLayer, –¢–û–õ–¨–ö–û –µ—Å–ª–∏ —Å–æ–≥–ª–∞—Å–∏–µ –ü–û–õ–£–ß–ï–ù–û
       if (granted) {
           window.dataLayer.push({'event': 'consent_update_success'});
           console.log('[Cookie Consent] Pushed "consent_update_success" event to dataLayer.');
       } else {
            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–µ —Å–æ–±—ã—Ç–∏–µ –ø—Ä–∏ –æ—Ç–∫–∞–∑–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            // window.dataLayer.push({'event': 'consent_update_denied'});
            // console.log('[Cookie Consent] Pushed "consent_update_denied" event to dataLayer.');
       }
    }

    // --- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM ---
    document.addEventListener('DOMContentLoaded', () => {
      console.log('[Cookie Consent] DOM Content Loaded. Initializing banner logic...');
      const banner = document.getElementById(bannerId);
      if (!banner) {
        console.error(`[Cookie Consent] Cookie banner element NOT found (ID: ${bannerId})`);
        return;
      }
      console.log('[Cookie Consent] Cookie banner element FOUND:', banner);

      const acceptBtn = document.getElementById(acceptBtnId);
      const declineBtn = document.getElementById(declineBtnId);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫–∏
      if (!acceptBtn) console.error(`[Cookie Consent] Accept button NOT found (ID: ${acceptBtnId})`);
      if (!declineBtn) console.error(`[Cookie Consent] Decline button NOT found (ID: ${declineBtnId})`);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ —Ä–∞–Ω–µ–µ
      const decisionMade = hasMadeDecision(); // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —É–∂–µ –≤—ã–≤–æ–¥–∏—Ç –ª–æ–≥

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–Ω–Ω–µ—Ä, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ä–µ—à–µ–Ω–∏–µ –ù–ï –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ
      if (!decisionMade) {
        console.log('[Cookie Consent] Decision not made previously. Trying to show banner...');
        banner.hidden = false;
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ display —Å—Ç–∏–ª—è
        setTimeout(() => {
            try {
                const styles = window.getComputedStyle(banner);
                console.log(`[Cookie Consent] Banner display style after setting hidden=false: ${styles.display}`);
                if (styles.display === 'none' && !banner.hidden) { // –î–æ–±–∞–≤–∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É !banner.hidden
                    console.warn('[Cookie Consent] Banner display is "none" despite hidden=false. Check CSS conflicts.');
                } else if (styles.display !== 'none' && banner.hidden) {
                     console.warn('[Cookie Consent] Banner has hidden attribute but display is not "none". Check CSS.');
                }
            } catch(e) {
                console.error('[Cookie Consent] Error getting computed style for banner', e);
            }
        }, 150); // –ù–µ–º–Ω–æ–≥–æ —É–≤–µ–ª–∏—á–∏–ª–∏ –∑–∞–¥–µ—Ä–∂–∫—É
      }
      // –ù–µ—Ç else, hasMadeDecision —É–∂–µ –≤—ã–≤–µ–ª –ª–æ–≥

      // –ù–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–∞–π–¥–µ–Ω—ã
      if (acceptBtn) {
        acceptBtn.addEventListener('click', (e) => {
          e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∫–Ω–æ–ø–∫–∏
          console.log('[Cookie Consent] Accept button clicked.');
          updateConsent(true); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–≥–ª–∞—Å–∏–µ –∫–∞–∫ 'granted'
          banner.hidden = true;  // –°–∫—Ä—ã–≤–∞–µ–º –±–∞–Ω–Ω–µ—Ä
          console.log('[Cookie Consent] Banner hidden after Accept.');
        });
      }

      if (declineBtn) {
        declineBtn.addEventListener('click', (e) => {
          e.preventDefault();
          console.log('[Cookie Consent] Decline button clicked.');
          updateConsent(false); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–≥–ª–∞—Å–∏–µ –∫–∞–∫ 'denied'
          banner.hidden = true;   // –°–∫—Ä—ã–≤–∞–µ–º –±–∞–Ω–Ω–µ—Ä
           console.log('[Cookie Consent] Banner hidden after Decline.');
        });
      }
    });
  })();